## 
## 1) Customize and copy this file to your ${user.home} directory
## 2) Trigger build with `mvn install -P env-dev -Denv=example'
##
## More generally: `mvn install -P env-dev -Denv=<context>' will filter
## a ${user.home}/sensorwebclient-build-<context>.properties file

wns.service.url=http://localhost/52nWNS/wns
sos.feeder.url=http://localhost/52n-sensorweb-sos-ses-feeder/SosSesFeeder
ses.service.url=http://localhost/SES-2010/services/SesPortType
ses.client.user.service.url=http://localhost/sensorwebclient-webapp/client/SesUserService
ses.response.delegate.url=http://localhost/SES-WNS-Translator/Translator_Servlet
ses.eml.resources.url=http://localhost/sensorwebclient-webapp/eml/

mail.username=<WNS_MAIL_USER>
mail.password=<WNS_MAIL_PASSWORD>
mail.sender.address=some@address.net
mail.smtp.host=<WNS_MAIL_SMTP_HOST>
mail.starttls.enable=true
mail.port=25
mail.authenticate=true
mail.ssl.enable=true

ses.database.user=<SES_DATABASE_USER>
ses.database.password=<SES_DATABASE_PASSWORD>
ses.database.connection=<JDBC_CONNECTION_STRING>
# switch to 'validate' once schema is created
ses.database.hibernate.hbm2ddl.auto = create

application.title=Sensor Web Client
sensorwebclient.webapp.name=${project.artifactId}-${project.version}
config.logger.fileappender.filepath=${user.home}/52n-logs/${project.artifactId}-${project.version}
config.logger.logger.level=INFO
config.logger.logger.level.oxf=WARN
config.logger.logger.level.client=DEBUG
config.logger.logger.level.server=DEBUG
config.logger.consoleappender.level=DEBUG
config.logger.fileappender.level=INFO